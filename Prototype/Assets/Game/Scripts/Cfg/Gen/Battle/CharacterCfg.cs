//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace Cfg.Battle
{
public sealed partial class CharacterCfg :  Bright.Config.BeanBase 
{
    public CharacterCfg(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        Desc = _buf.ReadString();
        Image = _buf.ReadString();
        BaseProperty = Battle.Property.DeserializeProperty(_buf);
        MoveSkillId = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);SkillSet = new System.Collections.Generic.HashSet<int>(/*n0 * 3 / 2*/);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); SkillSet.Add(_e0);}}
        PostInit();
    }

    public static CharacterCfg DeserializeCharacterCfg(ByteBuf _buf)
    {
        return new Battle.CharacterCfg(_buf);
    }

    /// <summary>
    /// 编号
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 简介
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 图片
    /// </summary>
    public string Image { get; private set; }
    public Battle.Property BaseProperty { get; private set; }
    /// <summary>
    /// 移动技能Id
    /// </summary>
    public int MoveSkillId { get; private set; }
    /// <summary>
    /// 技能集合
    /// </summary>
    public System.Collections.Generic.HashSet<int> SkillSet { get; private set; }

    public const int __ID__ = -660147727;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        BaseProperty?.Resolve(_tables);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        BaseProperty?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Desc:" + Desc + ","
        + "Image:" + Image + ","
        + "BaseProperty:" + BaseProperty + ","
        + "MoveSkillId:" + MoveSkillId + ","
        + "SkillSet:" + Bright.Common.StringUtil.CollectionToString(SkillSet) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}